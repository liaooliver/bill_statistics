{"version":3,"sources":["components/loadingStyle/ScaleLoading.jsx","components/statistics/AnalysisBoard.jsx","components/statistics/Category.jsx","components/statistics/BarChart.jsx","components/statistics/PieChart.jsx","components/statistics/TableClassic.jsx","components/statistics/RenderAnalysis.jsx","context/StatisticsContext.jsx","pages/Analysis.jsx","utils/bill_category.js","utils/currency.js"],"names":["ScaleLoading","className","color","AnalysisBoard","category","displayNTD","accumulatedCost","accumulatedRealCost","Category","categories","colorObj","value","map","item","by_spend","uuidv4","BarChartComponent","dataSet","dataKey","title","name","barSize","colorType","ResponsiveContainer","BarChart","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","key","bar_index","console","log","Bar","fill","entry","index","Cell","color_month","PieChartComponent","PieChart","Pie","nameKey","isAnimationActive","cx","cy","outerRadius","label","COLORS","TableClassic","style","background","by_percentage","RenderAnalysis","monthly","scattered","begin","last","width","height","StatisticsContext","createContext","StatisticsContextProvider","children","getFilterByCategory","a","fetch","then","response","json","getFilterByMonthly","scatteredBymonthly","year","month","Provider","CheckingData","haveData","FetchStatisticsData","useContext","useState","setCategory","setMonthly","loading","setLoading","setScattered","setHaveData","history","useHistory","useEffect","scatter","cache","JSON","parse","sessionStorage","getItem","Promise","all","res","every","length","setItem","stringify","catch","error","push","Analysis","bar_scatter","bar","number","undefined","Number","replace","Intl","NumberFormat","currency","minimumFractionDigits","format"],"mappings":"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","file":"static/js/6.8235aba8.chunk.js","sourcesContent":["import React from 'react';\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\n\nconst ScaleLoading = () => {\n    return (\n        <div className=\"flex justify-center my-3\">\n            <ScaleLoader color=\"rgba(59, 130, 246, 1)\" />\n        </div>\n    );\n}\n\nexport default ScaleLoading;","import React from 'react';\nimport { displayNTD } from '../../utils/currency';\n\nconst AnalysisBoard = ({ category }) => {\n    return ( \n        <div className=\"grid grid-cols-3 gap-3 md:gap-6\">\n            <div className=\"col-span-full md:col-span-1 md:mb-0 p-3 pb-5 bg-blue-500 text-white rounded\">\n                <span className=\"text-xs font-semibold\">總刷卡金額(調整前)</span>\n                <h4 className=\"text-center text-4xl font-extrabold\">{ displayNTD(category.accumulatedCost) }</h4>\n            </div>\n            <div className=\"col-span-full md:col-span-1 md:mb-0 p-3 pb-5 bg-yellow-500 text-white rounded\">\n                <span className=\"text-xs font-semibold\">總刷卡金額(調整後)</span>\n                <h4 className=\"text-center text-4xl font-extrabold\">{ displayNTD(category.accumulatedRealCost) }</h4>\n            </div>\n            <div className=\"col-span-full md:col-span-1 md:mb-0 p-3 pb-5 bg-gray-600 rounded\">\n                \n            </div>\n        </div>\n     );\n} \nexport default AnalysisBoard;","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { colorObj } from '../../utils/bill_category.js';\nimport { displayNTD } from '../../utils/currency';\n\nconst Category = ({ categories }) => {\n\n    return (\n        <div className=\"p-3 border rounded shadow md:sticky md:top-4\">\n            <div className=\"flex mb-3\">\n                <h5 className=\"flex-grow\">帳單分類</h5>\n            </div>\n            <ul className=\"flex flex-wrap\">\n                {\n                    categories && colorObj && categories.value.map(item => (\n                        <li key={uuidv4()} className=\"mb-2 w-1/2 md:w-full\">\n                            <span className={`${colorObj[item.category]}`}>{ item.category }</span>\n                            <span className=\"ml-3\">{ displayNTD(item.by_spend)}</span>\n                        </li>\n                    ))    \n                }\n            </ul>\n        </div>\n    );\n}\n\nexport default Category;","import React from 'react';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { color_month } from '../../utils/bill_category.js';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst BarChartComponent = ({ dataSet, title, dataKey, name, barSize, colorType }) => {\n\n    return ( \n        <ResponsiveContainer>\n            <BarChart data={dataSet} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"category\" />\n                <YAxis />\n                <Tooltip />\n                {\n                    dataKey.map((key, bar_index) => {\n                        console.log(key, bar_index)\n                        return (\n                            < Bar name={name[bar_index]} dataKey = { key } fill = \"#1e90ff\" barSize = { barSize } key={uuidv4()}>\n                            {\n                                dataSet.map((entry, index) => {\n                                    return (<Cell\n                                        key={`cell-${index}`}\n                                        fill={ colorType === 'bar' ? color_month['bar'][bar_index] : color_month['bar_scatter'][bar_index]}\n                                    />)}\n                                )\n                            }\n                        </Bar>\n                        )\n                    })\n                }\n            </BarChart>\n        </ResponsiveContainer>\n     );\n}\n \nexport default BarChartComponent;","import React from 'react';\nimport { PieChart, Pie, Tooltip, Cell, ResponsiveContainer } from 'recharts';\nimport { COLORS } from '../../utils/bill_category.js';\n\n\n// const RADIAN = Math.PI / 180;\n// const renderCustomizedLabel = ({\n//   cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n// }) => {\n//    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//   const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//   const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n//   return (\n//     <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//       {`${(percent * 100).toFixed(0)}%`}\n//     </text>\n//   );\n// };\n\nconst PieChartComponent = ({ dataSet }) => {\n    return (\n    <ResponsiveContainer>\n        <PieChart>\n            <Pie nameKey=\"category\"\n                dataKey=\"by_percentage\"\n                isAnimationActive={false}\n                data={dataSet}\n                cx=\"50%\" cy=\"50%\"\n                outerRadius={120}\n                fill=\"#8884d8\"\n                label\n            >\n                {\n                    dataSet.map((entry, index) =>\n                        <Cell\n                            key={`cell-${index}`}\n                            fill={COLORS[entry.category]}\n                        />\n                    )\n                }\n            </Pie>\n            <Tooltip />\n        </PieChart>\n    </ResponsiveContainer>);\n}\n\nexport default PieChartComponent;","import React from 'react';\nimport { COLORS } from '../../utils/bill_category.js';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst TableClassic = ({ value }) => {\n    return ( <table className=\"rounded-t-lg m-5 w-5/6 mx-auto bg-gray-200 text-gray-800\">\n    <thead>\n        <tr className=\"text-left border-b-2 border-gray-300\">\n            <th className=\"px-4 py-3\">類別</th>\n            <th className=\"px-4 py-3\">百分比</th>\n        </tr>\n    </thead>\n    <tbody>\n        {\n            value.map((item, index) => \n                (<tr className=\"bg-gray-100 border-b border-gray-200\" key={uuidv4()}>\n                    <td className=\"flex items-center px-4 py-3\">\n                        <span className=\"w-4 h-4 rounded-full inline-block mr-2\" style={{ background: `${COLORS[item.category]}`}}></span>\n                        {item.category}\n                    </td>\n                    <td className=\"px-4 py-3 font-semibold\">{item.by_percentage}</td>\n                </tr>)\n            )\n        }\n    </tbody>\n</table> );\n}\n \nexport default TableClassic;","import React from 'react';\nimport AnalysisBoard from './AnalysisBoard';\nimport Category from './Category';\nimport BarCahrtComponent from './BarChart';\nimport PieChartComponent from './PieChart';\nimport TableClassic from './TableClassic';\n\nconst RenderAnalysis = ({ monthly, category, scattered }) => {\n\n    return (\n        <>\n            <div className=\"mb-3\">\n                <span className=\"badge-yellow w-auto\">統計期間 { category.begin } ~ { category.last }</span>\n            </div>\n            <AnalysisBoard category={category} />\n            <div className=\"md:grid grid-cols-4 row gap-4 mt-3\">\n                <div className=\"col-span-full md:col-span-1 md:row-span-3 relative md:mb-0 mb-4\">\n                    {\n                        category && <Category categories={category} />\n                    }\n                </div>\n                <div className=\"col-span-full md:col-span-3 md:mb-0 mb-4\">\n                    {\n                        monthly && <div className=\"p-3 border rounded shadow\">\n                            <h4 className=\"text-center mb-3\">單日消費分佈</h4>\n                            <div style={{ width: '100%', height: 400 }}>\n                                <BarCahrtComponent\n                                    dataSet={scattered} barSize={10} dataKey={['billSpend', 'adjustSpend']}\n                                    name={['調整前 $', '調整後 $']} colorType=\"bar_scatter\" />\n                            </div>\n                        </div>\n                    }\n                </div>\n                <div className=\"col-span-full md:col-span-3 md:mb-0 mb-4\">\n                    {\n                        monthly && <div className=\"p-3 border rounded shadow\">\n                            <h4 className=\"text-center mb-3\">各月份消費總額</h4>\n                            <div style={{ width: '100%', height: 400 }}>\n                                <BarCahrtComponent\n                                    dataSet={monthly} barSize={15} dataKey={['spend', 'realSpend']}\n                                    name={['調整前 $', '調整後 $']} colorType=\"bar\" />\n                            </div>\n                        </div>\n                    }\n                </div>\n                <div className=\"col-span-full md:col-span-3\">\n                    {\n                        category && <div className=\"p-3 border rounded shadow\">\n                            <h4 className=\"text-center mb-3\">消費總額比例</h4>\n                            <div style={{ width: '100%', height: 400 }}>\n                                <PieChartComponent dataSet={category.value} />\n                            </div>\n                            <TableClassic value={category.value}></TableClassic>\n                            {/* <table className=\"rounded-t-lg m-5 w-5/6 mx-auto bg-gray-200 text-gray-800\">\n                                <thead>\n                                    <tr className=\"text-left border-b-2 border-gray-300\">\n                                        <th className=\"px-4 py-3\">類別</th>\n                                        <th className=\"px-4 py-3\">百分比</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        category.value.map((item, index) => \n                                            (<tr className=\"bg-gray-100 border-b border-gray-200\" key={uuidv4()}>\n                                                <td className=\"px-4 py-3\">\n                                                    <span className=\"w-4 h-4 rounded-full inline-block mr-2\" style={{ background: `${COLORS[item.category]}`}}></span>\n                                                    {item.category}\n                                                </td>\n                                                <td className=\"px-4 py-3\">{item.by_percentage}</td>\n                                            </tr>)\n                                        )\n                                    }\n                                </tbody>\n                            </table> */}\n                        </div>\n                    }\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default RenderAnalysis;","import React, { createContext } from 'react';\n\nexport const StatisticsContext = createContext();\n\nexport const StatisticsContextProvider = ({ children }) => {\n    \n    const getFilterByCategory = async () => {\n        return await fetch('subsidiaryLedger/filter_by_category')\n            .then(response => response.json())\n    }\n\n    const getFilterByMonthly = async () => {\n        return await fetch('subsidiaryLedger/filter_by_monthly')\n            .then(response => response.json())\n    }\n\n    const scatteredBymonthly = async (year, month) => {\n        return await fetch(`subsidiaryLedger/scattered_monthly?year=${year}&month=${month}`)\n            .then(response => response.json())\n    }\n\n    return (\n        <StatisticsContext.Provider value={{\n            getFilterByCategory,\n            getFilterByMonthly,\n            scatteredBymonthly\n        }}>{children}</StatisticsContext.Provider>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router\"\nimport RenderAnalysis from '../components/statistics/RenderAnalysis';\nimport ScaleLoading from '../components/loadingStyle/ScaleLoading';\nimport { StatisticsContextProvider, StatisticsContext } from '../context/StatisticsContext';\n\nconst CheckingData = ({ haveData, scattered, monthly, category }) => {\n    return (\n        <>\n            {\n                haveData ? <RenderAnalysis scattered={scattered} monthly={monthly} category={category} /> : <div className=\"font-bold text-center text-md text-red-600 mb-3\">Oops! 無資料！請先上傳檔案</div>\n            }\n        </>\n    )\n}\n\n// Context Provider\nconst FetchStatisticsData = () => {\n\n    const { getFilterByCategory, getFilterByMonthly, scatteredBymonthly } = useContext(StatisticsContext);\n    const [category, setCategory] = useState();\n    const [monthly, setMonthly] = useState();\n    const [loading, setLoading] = useState(false);\n    const [scattered, setScattered] = useState();\n    const [haveData, setHaveData] = useState(true)\n    const history = useHistory();\n\n    useEffect(() => {\n        const category = getFilterByCategory;\n        const monthly = getFilterByMonthly;\n        const scatter = scatteredBymonthly;\n        const cache = JSON.parse(sessionStorage.getItem(\"StatisticsData\"))\n\n        if (cache) {\n            setCategory(cache[0])\n            setMonthly(cache[1])\n            setScattered(cache[2])\n            setLoading(true)\n        } else {\n            Promise.all([category(), monthly(), scatter()]).then(res => {\n                const verification = res.every(item => item.length === 0 ? false : true)\n                if (verification) {\n                    setCategory(res[0])\n                    setMonthly(res[1])\n                    setScattered(res[2])\n                    setHaveData(true)\n                    setLoading(true)\n                    sessionStorage.setItem(\"StatisticsData\", JSON.stringify(res))\n                } else {\n                    setHaveData(false)\n                    setLoading(true)\n                }\n            }).catch(error => history.push('/500'))\n        }\n    }, [])\n\n    return (\n        <>\n            {\n                loading ? <CheckingData\n                    haveData={haveData}\n                    scattered={scattered}\n                    monthly={monthly}\n                    category={category} /> : <ScaleLoading />\n            }\n        </>\n    )\n}\n\n\nconst Analysis = () => {\n    return (\n        <StatisticsContextProvider>\n            <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n                <div className=\"px-4 sm:px-0\">\n                    <FetchStatisticsData />\n                </div>\n            </div>\n        </StatisticsContextProvider>\n    );\n}\n\nexport default Analysis;","export const colorObj = {\n    \"吃飯\":\"badge-red\",\n    \"交通\":\"badge-yellow\",\n    \"捐款\":\"badge-blue\",\n    \"3C\":\"badge-green\",\n    \"衣服\":\"badge-indigo\",\n    \"娛樂\":\"badge-purple\",\n    \"旅遊\":\"badge-pink\",\n    \"電話\":\"badge-gray\",\n    \"進修\":\"badge-red\",\n    \"其他\":\"badge-green\"        \n}\n\nexport const COLORS = {\n    \"吃飯\":\"#F87171\",\n    \"交通\":\"#FBBF24\",\n    \"捐款\":\"#60A5FA\",\n    \"3C\":\"#34D399\",\n    \"衣服\":\"#818CF8\",\n    \"娛樂\":\"#A78BFA\",\n    \"旅遊\":\"#F472B6\",\n    \"電話\":\"#9CA3AF\",\n    \"進修\":\"#F87171\",\n    \"其他\":\"#34D399\"\n}\n\nexport const color_month = {\n    bar_scatter: [\n        '#3b82f6',\n        '#f59e0b'\n    ],\n    bar: [\n        '#3b82f6',\n        '#F87171'\n    ]\n}\n\n","export const displayNTD = (value) => {\n    let number = value\n\n    // check empty or no\n    if (number === undefined) return;\n\n    // check type\n    if (typeof value === 'string') {\n        number = Number(number.replace(/[,]+/g, \"\"))*-1;\n    }\n\n    // define NumberFormat option\n    const formatOption = {\n        style: 'currency',\n        currency: 'TWD',\n        minimumFractionDigits: 0,\n    }\n\n    return new Intl.NumberFormat('zh-TW', formatOption).format(number);\n}"],"sourceRoot":""}