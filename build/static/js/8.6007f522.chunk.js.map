{"version":3,"sources":["components/Pagination.jsx","components/TableHeader.jsx","components/TableBody.jsx","components/Table.jsx","pages/List.jsx","utils/bill_category.js","utils/currency.js"],"names":["Pagination","totalPage","limit","useState","items","setItems","currentPage","setCurrentPage","reloadBill","useContext","BillListContext","useEffect","tempItems","i","push","page","current","changePage","forEach","item","className","href","onClick","xmlns","viewBox","fill","fillRule","d","clipRule","aria-hidden","TableHeader","scope","LoadingRow","RenderRow","data","activeEdit","displayNTD","colorObj","TableBody","loading","rows","setRows","InteractiveContext","setOpenEditMode","setBillDetail","rowsObj","uuidv4","rowObj","map","renderObj","Table","billList","isloading","payload","length","total","List","props","getBillList","isError","to","COLORS","color_month","bar_scatter","bar","value","number","undefined","Number","replace","Intl","NumberFormat","style","currency","minimumFractionDigits","format"],"mappings":"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","file":"static/js/8.6007f522.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { BillListContext } from '../context/BillListContext';\n\nconst Pagination = ({ totalPage, limit }) => {\n\n    const [items, setItems] = useState(null);\n    const [currentPage, setCurrentPage] = useState(0);\n    const { reloadBill } = useContext(BillListContext);\n\n    useEffect(() => {\n        let tempItems = []\n        for (let i = 0; i < totalPage; i++) {\n            tempItems.push({\n                page: i,\n                limit,\n                current: i === 0 ? true : false\n            })\n        }\n        setItems(tempItems)\n    }, [totalPage, limit]);\n\n    const changePage = (page) => {\n        reloadBill(page, 10)\n        const tempItems = [...items];\n        tempItems.forEach(item => {\n            item['current'] = false;\n        });\n        tempItems[page]['current'] = true;\n        setCurrentPage(page);\n        setItems(tempItems);\n    }\n\n    const nextPage = () => {\n        if (currentPage + 1 >= totalPage) return;\n        changePage(currentPage + 1);\n    };\n\n    const prevPage = () => {\n        if (currentPage === 0) return;\n        changePage(currentPage - 1);\n    };\n\n    const firstPage = () => {\n        if (currentPage === 0) return;\n        changePage(0);\n    };\n\n    const lastPage = () => {\n        if (currentPage + 1 >= totalPage) return;\n        changePage(totalPage - 1);\n    };\n\n    return (\n        // <!-- This example requires Tailwind CSS v2.0+ -->\n        <div className=\"bg-white py-3 flex items-center justify-center border-t border-gray-200\">\n            <div className=\"flex-1 flex justify-between sm:hidden\">\n                <a href=\"/#\" className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:text-gray-500\">\n                    Previous\n                </a>\n                <a href=\"/#\" className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:text-gray-500\">\n                    Next\n                </a>\n            </div>\n            \n            <div className=\"hidden sm:flex sm:justify-center sm:items-center\">\n\n                <button onClick={() => firstPage()} className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\">\n                    <span className=\"sr-only\">Previous</span>\n                    \n                    <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M15.707 15.707a1 1 0 01-1.414 0l-5-5a1 1 0 010-1.414l5-5a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 010 1.414zm-6 0a1 1 0 01-1.414 0l-5-5a1 1 0 010-1.414l5-5a1 1 0 011.414 1.414L5.414 10l4.293 4.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n                    </svg>\n                </button>\n\n                <button onClick={() => prevPage()} className=\"relative inline-flex items-center px-2 py-2 ml-2 border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\">\n                    <span className=\"sr-only\">Previous</span>\n\n                    <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                        <path fillRule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                </button>\n\n                <p className=\"mx-4\">{totalPage ? currentPage + 1 : 0 } / {totalPage}</p>\n                \n                <button onClick={() => nextPage()} className=\"relative inline-flex items-center px-2 py-2 mr-2 border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\">\n                    <span className=\"sr-only\">Next</span>\n\n                    <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                        <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                </button>\n\n                <button onClick={() => lastPage()} className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\">\n                    <span className=\"sr-only\">Next</span>\n\n                    <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M10.293 15.707a1 1 0 010-1.414L14.586 10l-4.293-4.293a1 1 0 111.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n                        <path fillRule=\"evenodd\" d=\"M4.293 15.707a1 1 0 010-1.414L8.586 10 4.293 5.707a1 1 0 011.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default Pagination;","import React from 'react';\n\nconst TableHeader = () => {\n    return ( \n        <thead className=\"bg-gray-50\">\n            <tr>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">消費日期</th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">卡別</th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">刷卡金額</th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">調整後金額</th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">消費明細</th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">類別</th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">備忘錄</th>\n                <th scope=\"col\" className=\"relative px-6 py-3\"><span className=\"sr-only\">Edit</span></th>\n            </tr>\n        </thead>\n     );\n}\n \nexport default TableHeader;","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { InteractiveContext } from '../context/InteractiveContext';\nimport { displayNTD } from '../utils/currency';\nimport { colorObj } from '../utils/bill_category';\n\nconst LoadingRow = () => {\n    return (\n        <tr>\n            <td className=\"px-6 py-4 whitespace-nowrap\">\n                <div className=\"w-full h-7 bg-gray-400 rounded\"></div>\n            </td>\n            <td className=\"px-6 py-4 whitespace-nowrap\">\n                <div className=\"w-full h-7 bg-gray-400 rounded\"></div>\n            </td>\n            <td className=\"px-6 py-4 whitespace-nowrap\">\n                <div className=\"w-full h-7 bg-gray-400 rounded\"></div>\n            </td>\n            <td className=\"px-6 py-4 whitespace-nowrap\">\n                <div className=\"w-full h-7 bg-gray-400 rounded\"></div>\n            </td>\n            <td className=\"px-6 py-4 whitespace-nowrap\">\n                <div className=\"w-full h-7 bg-gray-400 rounded\"></div>\n            </td>\n            <td className=\"px-6 py-4 whitespace-nowrap\">\n                <div className=\"w-full h-7 bg-gray-400 rounded\"></div>\n            </td>\n            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                <div className=\"w-full h-7 bg-gray-400 rounded\"></div>\n            </td>\n            <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                <div className=\"py-1 px-1 h-7 rounded bg-indigo-200 text-indigo-700 hover:text-indigo-100 hover:bg-indigo-600\"></div>\n            </td>\n        </tr>\n    )\n}\n\nconst RenderRow = ({ data, activeEdit }) => {\n\n    return (\n        <tr>\n            <td className=\"px-6 py-4 whitespace-nowrap\">\n                <div>{data['消費日期']}</div>\n            </td>\n            <td className=\"px-6 py-4 whitespace-nowrap\">\n                <div>{data['卡別']}</div>\n            </td>\n            <td className=\"px-6 py-4 whitespace-nowrap\">\n                <div>{displayNTD(data['金額'])}</div>\n            </td>\n            <td className=\"px-6 py-4 whitespace-nowrap\">\n                <div>{displayNTD(data['調整後金額'])}</div>\n            </td>\n            <td className=\"px-6 py-4 whitespace-nowrap\">\n                <div>{data['消費明細']}</div>\n            </td>\n            <td className=\"px-6 py-4 whitespace-nowrap\">\n                <span className={`${colorObj[data['類別']]}`}>\n                    {data['類別']}\n                </span>\n            </td>\n            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                {data['備忘錄']}\n            </td>\n            <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                <button onClick={() => activeEdit(data)} className=\"py-1 px-3 btn-outline-none btn-rounded btn-color-indigo\">編輯</button>\n            </td>\n        </tr>\n    )\n}\n\nconst TableBody = ({ loading, data }) => {\n\n    const [rows, setRows] = useState([]);\n    const { setOpenEditMode, setBillDetail } = useContext(InteractiveContext);\n\n    useEffect(() => {\n\n        const activeEdit = (data) => {\n            setBillDetail(data)\n            setOpenEditMode(true)\n        }\n    \n        const renderObj = (data) => {\n            const rowObj = data && data.map((item) =>\n                <RenderRow\n                    key={uuidv4()}\n                    data={item}\n                    activeEdit={activeEdit}\n                />\n            )\n            setRows(rowObj)\n        }\n\n        if (loading === true) {\n            let rowsObj = []\n            for (let i = 0; i < 10; i++) {\n                rowsObj.push(<LoadingRow key={uuidv4()} />);\n            }\n            setRows(rowsObj)\n        } else {\n            renderObj(data)\n        }\n\n    }, [loading, data, setOpenEditMode, setBillDetail])\n    \n    return (\n        <tbody className={`bg-white divide-y divide-gray-200 ${loading ? \"animate-pulse\" : \"\"}`}>\n            {rows}\n        </tbody>\n    );\n}\n\nexport default TableBody;","import React from 'react';\nimport Pagination from '../components/Pagination';\nimport TableHeader from './TableHeader';\nimport TableBody from './TableBody';\n\n\nconst Table = ({ billList }) => {\n\n    return (\n        <div className=\"flex flex-col mt-3 mb-6\">\n            {\n                !billList.isloading && billList.payload.length === 0 ? <div className=\"font-bold text-center text-md text-red-600 mb-3\">Oops! 無資料！請先上傳檔案</div> : ''\n            }\n            <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                    <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                        <table className=\"min-w-full divide-y divide-gray-200\">\n                            <TableHeader />\n                            <TableBody\n                                loading={billList.isloading}\n                                data={billList.payload}\n                            />\n                        </table>\n                    </div>\n                </div>\n            </div>\n            <Pagination\n                total={billList.total}\n                totalPage={billList.totalPage}\n                page={billList.page}\n                limit={billList.limit}\n            />\n        </div>\n    );\n}\n\n\nexport default Table;","import React, { useContext, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { BillListContext } from '../context/BillListContext';\n\nconst List = (props) => {\n\n    // from global state\n    const { billList, getBillList } = useContext(BillListContext);\n\n    useEffect(() => {\n        getBillList(0, 10);\n    }, [])\n\n    return (\n        <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n            {\n                billList.isError ? <Redirect to=\"/500\" /> : <>\n                    <div className=\"px-4 sm:px-0\">\n                        <Table billList={billList} />\n                    </div>\n                </>\n            }\n        </div>\n    );\n}\n\nexport default List;","export const colorObj = {\n    \"吃飯\":\"badge-red\",\n    \"交通\":\"badge-yellow\",\n    \"捐款\":\"badge-blue\",\n    \"3C\":\"badge-green\",\n    \"衣服\":\"badge-indigo\",\n    \"娛樂\":\"badge-purple\",\n    \"旅遊\":\"badge-pink\",\n    \"電話\":\"badge-gray\",\n    \"進修\":\"badge-red\",\n    \"其他\":\"badge-green\"        \n}\n\nexport const COLORS = {\n    \"吃飯\":\"#F87171\",\n    \"交通\":\"#FBBF24\",\n    \"捐款\":\"#60A5FA\",\n    \"3C\":\"#34D399\",\n    \"衣服\":\"#818CF8\",\n    \"娛樂\":\"#A78BFA\",\n    \"旅遊\":\"#F472B6\",\n    \"電話\":\"#9CA3AF\",\n    \"進修\":\"#F87171\",\n    \"其他\":\"#34D399\"\n}\n\nexport const color_month = {\n    bar_scatter: [\n        '#3b82f6',\n        '#f59e0b'\n    ],\n    bar: [\n        '#3b82f6',\n        '#F87171'\n    ]\n}\n\n","export const displayNTD = (value) => {\n    let number = value\n\n    // check empty or no\n    if (number === undefined) return;\n\n    // check type\n    if (typeof value === 'string') {\n        number = Number(number.replace(/[,]+/g, \"\"))*-1;\n    }\n\n    // define NumberFormat option\n    const formatOption = {\n        style: 'currency',\n        currency: 'TWD',\n        minimumFractionDigits: 0,\n    }\n\n    return new Intl.NumberFormat('zh-TW', formatOption).format(number);\n}"],"sourceRoot":""}